class Solution:
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if len(nums) == 0:
            return 0
        i = 0
        j = 1
        while j < len(nums):
            if nums[j] != nums[i]:
                i += 1
                nums[i] = nums[j]
            else:
                pass
            j += 1
        return i + 1
        
        
# https://leetcode.com/problems/remove-duplicates-from-sorted-array/
# 思路：双指针法，一个慢指针，一个快指针，慢指针用于结果，快指针用于修改数组。
# Runtime: 76 ms, faster than 57.60% of Python3 online submissions for Remove Duplicates from Sorted Array.

"""
Notes:
1. 这种要对数组本身做修改的情况，不太好用普通的 for 循环 或者 while 循环。
2. 数组修改并不局限于元素替换位置，数组是可以修改的。
3. 注意 LeetCode 这里的注释，都是有用的，比如此题的输入 type nums: List[int]，所以 return 的虽然是 int，但是数组的是数组。
4. 这种题目之前没做过，没经验自己不要想太久，浪费时间，第一遍 LeetCode 还是学套路为主。
5. Java 中的 for 与 Python 中的 for 应该是不一样的。
"""
